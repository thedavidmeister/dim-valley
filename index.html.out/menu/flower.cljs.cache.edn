{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name menu.flower, :imports nil, :requires {h hoplon.core, hoplon.core hoplon.core, j javelin.core, javelin.core javelin.core, fonts.hoplon fonts.hoplon, fonts.config fonts.config, colours.ui-gradients colours.ui-gradients}, :uses nil, :defs {easing {:name menu.flower/easing, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :line 11, :column 1, :end-line 11, :end-column 12, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :line 11, :column 6, :end-line 11, :end-column 12}}, polar->cartesian {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :line 13, :column 7, :end-line 13, :end-column 23, :arglists (quote ([radius radians]))}, :name menu.flower/polar->cartesian, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :end-column 23, :method-params ([radius radians]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([radius radians]))}, n->px {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :line 18, :column 7, :end-line 18, :end-column 12, :arglists (quote ([n]))}, :name menu.flower/n->px, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :end-column 12, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, outer-wrapper {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :line 20, :column 7, :end-line 20, :end-column 20, :arglists (quote ([offset outer-radius item-radius & children])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(offset outer-radius item-radius children)], :arglists ([offset outer-radius item-radius & children]), :arglists-meta (nil)}}, :name menu.flower/outer-wrapper, :variadic true, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(offset outer-radius item-radius children)], :arglists ([offset outer-radius item-radius & children]), :arglists-meta (nil)}, :method-params [(offset outer-radius item-radius children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists ([offset outer-radius item-radius & children])}, open-button {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :line 30, :column 7, :end-line 30, :end-column 18, :arglists (quote ([open? radius transition-length]))}, :name menu.flower/open-button, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :end-column 18, :method-params ([open? radius transition-length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 3, :fn-var true, :arglists (quote ([open? radius transition-length]))}, menu {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :line 94, :column 7, :end-line 94, :end-column 11, :arglists (quote ([items radius]))}, :name menu.flower/menu, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/1a6/r3nb31/menu/flower.cljs", :end-column 11, :method-params ([items radius]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([items radius]))}}, :require-macros {h hoplon.core, hoplon.core hoplon.core, j javelin.core, javelin.core javelin.core}, :cljs.analyzer/constants {:seen #{:transform :text-align :bottom :transition :valign :top :overflow :background-color :width :css :cursor :background-image :click :z-index :opacity :url :right :position :background-repeat :background-position :border :border-radius :background-size :height :left :text}, :order [:css :position :left :bottom :overflow :click :width :height :border-radius :z-index :cursor :background-color :transition :top :transform :url :text :valign :text-align :right :opacity :background-image :background-repeat :background-position :border :background-size]}, :doc nil}