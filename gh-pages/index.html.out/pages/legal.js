// Compiled by ClojureScript 1.9.908 {:static-fns true, :optimize-constants true}
goog.provide('pages.legal');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('hoplon.core');
goog.require('layout.content_block');
goog.require('wheel.link.hoplon');
goog.require('wheel.abn.hoplon');
pages.legal.content = (function pages$legal$content(){
var G__25712 = (image.hoplon.default_header.cljs$core$IFn$_invoke$arity$0 ? image.hoplon.default_header.cljs$core$IFn$_invoke$arity$0() : image.hoplon.default_header.call(null));
var G__25713 = layout.content_block.content_inner.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(hoplon.core.h1.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h1.cljs$core$IFn$_invoke$arity$1("Dim Valley Pty. Ltd.") : hoplon.core.h1.call(null,"Dim Valley Pty. Ltd.")),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Est. 2017-03-20",(hoplon.core.br.cljs$core$IFn$_invoke$arity$0 ? hoplon.core.br.cljs$core$IFn$_invoke$arity$0() : hoplon.core.br.call(null)),"A.B.N. ",wheel.abn.hoplon.abn("38 617 641 595")], 0)),(hoplon.core.h2.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h2.cljs$core$IFn$_invoke$arity$1("Contracts") : hoplon.core.h2.call(null,"Contracts")),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We are generally pretty flexible and happy to negotiate contracts to meet real and reasonable needs but there are a few items that we take a firm stance on. The below is ",(hoplon.core.em.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.em.cljs$core$IFn$_invoke$arity$1("not") : hoplon.core.em.call(null,"not"))," a contract nor comprehensive, only an example of the most obvious considerations."], 0)),(hoplon.core.h3.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h3.cljs$core$IFn$_invoke$arity$1("Ability to negotiate") : hoplon.core.h3.call(null,"Ability to negotiate")),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var G__25714 = "We expect to read and negotiate any new contract ";
var G__25715 = (hoplon.core.em.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.em.cljs$core$IFn$_invoke$arity$1("before") : hoplon.core.em.call(null,"before"));
var G__25716 = " starting work.";
return (hoplon.core.strong.cljs$core$IFn$_invoke$arity$3 ? hoplon.core.strong.cljs$core$IFn$_invoke$arity$3(G__25714,G__25715,G__25716) : hoplon.core.strong.call(null,G__25714,G__25715,G__25716));
})()], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We can provide a standard contract upon request."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Please allow time for and do not delay this process if you have urgent work."], 0)),(hoplon.core.h3.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h3.cljs$core$IFn$_invoke$arity$1("Intellectual property (IP)") : hoplon.core.h3.call(null,"Intellectual property (IP)")),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Please do not expect us to transfer any IP before full payment of invoices has been made."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Don't expect us to review or warrant the legality of licenses in open source code we recommend or use. We prefer standard open source licenses such as LGPL/MIT/Eclipse where available but we are not lawyers and do not extensively review transitive dependencies."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(hoplon.core.strong.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.strong.cljs$core$IFn$_invoke$arity$1("We will only transfer IP for code/documents delivered directly to your organisation's standard code/document repositories.") : hoplon.core.strong.call(null,"We will only transfer IP for code/documents delivered directly to your organisation's standard code/document repositories."))], 0)),(hoplon.core.h3.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h3.cljs$core$IFn$_invoke$arity$1("Payment") : hoplon.core.h3.call(null,"Payment")),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We work and charge for time and materials ",(hoplon.core.em.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.em.cljs$core$IFn$_invoke$arity$1("de facto") : hoplon.core.em.call(null,"de facto")),". Time includes any and all time tracked, materials includes reasonable travel expenses (among other things)."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Other payment schedules, such as fixed fee, must be explicitly discussed and agreed to."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Payment must be made in full and on time."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We won't accept anything that limits our ability to collect payment."], 0)),(hoplon.core.h3.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h3.cljs$core$IFn$_invoke$arity$1("Not your employees") : hoplon.core.h3.call(null,"Not your employees")),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We maintain honest, above board and sustainable business relationships. We are not your employees and will avoid anything that reads like employment."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We have multiple clients, some of them may be directly or indirectly in competition with you now or in the future. We can agree to confidentiality but not exclusivity."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We can say \"no\" to you if you ask us to do something we consider unreasonable or outside the scope of our engagement."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var G__25717 = "We expect contracts to be fair and include sensible protections and benefits to the ongoing business needs of ";
var G__25718 = (hoplon.core.em.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.em.cljs$core$IFn$_invoke$arity$1("all") : hoplon.core.em.call(null,"all"));
var G__25719 = " involved parties.";
return (hoplon.core.strong.cljs$core$IFn$_invoke$arity$3 ? hoplon.core.strong.cljs$core$IFn$_invoke$arity$3(G__25717,G__25718,G__25719) : hoplon.core.strong.call(null,G__25717,G__25718,G__25719));
})()], 0)),(hoplon.core.h3.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h3.cljs$core$IFn$_invoke$arity$1("Responsibility and liability") : hoplon.core.h3.call(null,"Responsibility and liability")),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We will only take responsibility for things that we have direct and obvious control over."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We will not accept any liabilities that contradict clauses in our insurance policies."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(hoplon.core.strong.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.strong.cljs$core$IFn$_invoke$arity$1("We will not accept liability significantly above and beyond the value of the contract.") : hoplon.core.strong.call(null,"We will not accept liability significantly above and beyond the value of the contract."))], 0)),(hoplon.core.h3.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h3.cljs$core$IFn$_invoke$arity$1("Kill fees") : hoplon.core.h3.call(null,"Kill fees")),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["If you expect us to set aside many ",(hoplon.core.em.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.em.cljs$core$IFn$_invoke$arity$1("specific") : hoplon.core.em.call(null,"specific"))," dates and times for your use we might request a \"kill fee\" clause."], 0)),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["This clause entitles us to a guaranteed minimum percentage (e.g. 60%) of the total expected value of the contract in the unlikely case that the project is cancelled outright by you after signing with us."], 0)),(hoplon.core.h2.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h2.cljs$core$IFn$_invoke$arity$1("Insurances") : hoplon.core.h2.call(null,"Insurances")),(hoplon.core.h3.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.h3.cljs$core$IFn$_invoke$arity$1("Professional Indemnity, Public & Products Liability") : hoplon.core.h3.call(null,"Professional Indemnity, Public & Products Liability")),layout.body_text.p.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Insurer: ",wheel.link.hoplon.external.cljs$core$IFn$_invoke$arity$2("https://www.dualaustralia.com.au/","Dual Australia Pty. Ltd."),(hoplon.core.br.cljs$core$IFn$_invoke$arity$0 ? hoplon.core.br.cljs$core$IFn$_invoke$arity$0() : hoplon.core.br.call(null)),"Professional Indemnity limit: ",(hoplon.core.strong.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.strong.cljs$core$IFn$_invoke$arity$1("A$2,000,000") : hoplon.core.strong.call(null,"A$2,000,000")),(hoplon.core.br.cljs$core$IFn$_invoke$arity$0 ? hoplon.core.br.cljs$core$IFn$_invoke$arity$0() : hoplon.core.br.call(null)),"Public & Products Liability limit: ",(hoplon.core.strong.cljs$core$IFn$_invoke$arity$1 ? hoplon.core.strong.cljs$core$IFn$_invoke$arity$1("A$20,000,000") : hoplon.core.strong.call(null,"A$20,000,000")),(hoplon.core.br.cljs$core$IFn$_invoke$arity$0 ? hoplon.core.br.cljs$core$IFn$_invoke$arity$0() : hoplon.core.br.call(null)),"Certificate of Currency (2017-08-08): ",wheel.link.hoplon.external.cljs$core$IFn$_invoke$arity$2("https://s3-ap-southeast-2.amazonaws.com/dim-valley-public/legal-docs/Certificate+of+currency+2017-8-8+P-IT016234517I-3.pdf","Dim Valley Pty. Ltd. & Nice Feature Pty. Ltd.")], 0)),layout.spacer.vertical_spacer.cljs$core$IFn$_invoke$arity$0()], 0));
return (hoplon.core.div.cljs$core$IFn$_invoke$arity$2 ? hoplon.core.div.cljs$core$IFn$_invoke$arity$2(G__25712,G__25713) : hoplon.core.div.call(null,G__25712,G__25713));
});
