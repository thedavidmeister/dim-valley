{:rename-macros {}, :renames {}, :externs {Math {cos {}}}, :use-macros {}, :excludes #{}, :name pages.dim-valley, :imports nil, :requires {unit.conversion unit.conversion, layout.header-block layout.header-block, mapbox.dom mapbox.dom, u unit.conversion, javelin.core javelin.core, hoplon.core hoplon.core, mapbox.api mapbox.api, wheel.hoplon.abn.dom wheel.hoplon.abn.dom, layout.content-block layout.content-block, colours.ui-gradients colours.ui-gradients, j javelin.core, h hoplon.core, wheel.math.geometry wheel.math.geometry}, :uses nil, :defs {dv-marker {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/r3nb31/pages/dim_valley.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([width]))}, :name pages.dim-valley/dv-marker, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/r3nb31/pages/dim_valley.cljs", :end-column 16, :method-params ([width]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([width]))}, dv-map {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/r3nb31/pages/dim_valley.cljs", :line 37, :column 7, :end-line 37, :end-column 13, :arglists (quote ([]))}, :name pages.dim-valley/dv-map, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/r3nb31/pages/dim_valley.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, content {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/r3nb31/pages/dim_valley.cljs", :line 55, :column 7, :end-line 55, :end-column 14, :arglists (quote ([]))}, :name pages.dim-valley/content, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/r3nb31/pages/dim_valley.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {h hoplon.core, hoplon.core hoplon.core, j javelin.core, javelin.core javelin.core}, :cljs.analyzer/constants {:seen #{:transform :marker-options :offset :top :marker :background-color :width :css :position :options :height :left :margin}, :order [:width :height :background-color :position :top :left :css :transform :margin :options :marker :marker-options :offset]}, :doc nil}