// Compiled by ClojureScript 1.9.908 {:static-fns true, :optimize-constants true}
goog.provide('wheel.email.spec');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('cljs.spec.alpha');
goog.require('clojure.test.check.generators');
wheel.email.spec.regex = /.+@.+\..+/;
cljs.spec.alpha.def_impl(cljs.core.cst$kw$wheel$email_SLASH_email,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_spec,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_and,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_partial,cljs.core.cst$sym$cljs$core_SLASH_re_DASH_matches,cljs.core.cst$sym$wheel$email$spec_SLASH_regex)),cljs.core.cst$kw$gen,cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,cljs.core.list(cljs.core.cst$sym$clojure$test$check$generators_SLASH_fmap,cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c], null)], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_str,cljs.core.cst$sym$a,"@",cljs.core.cst$sym$b,".",cljs.core.cst$sym$c)),cljs.core.list(cljs.core.cst$sym$clojure$test$check$generators_SLASH_vector,cljs.core.cst$sym$clojure$test$check$generators_SLASH_string,(3))))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_and,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_partial,cljs.core.cst$sym$cljs$core_SLASH_re_DASH_matches,cljs.core.cst$sym$wheel$email$spec_SLASH_regex)),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_partial,cljs.core.cst$sym$cljs$core_SLASH_re_DASH_matches,cljs.core.cst$sym$wheel$email$spec_SLASH_regex)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.re_matches,wheel.email.spec.regex)], null),null),cljs.core.constantly(clojure.test.check.generators.fmap((function (p__20811){
var vec__20812 = p__20811;
var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20812,(0),null);
var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20812,(1),null);
var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20812,(2),null);
return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a),"@",cljs.core.str.cljs$core$IFn$_invoke$arity$1(b),".",cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join('');
}),clojure.test.check.generators.vector.cljs$core$IFn$_invoke$arity$2(clojure.test.check.generators.string,(3)))),null));
