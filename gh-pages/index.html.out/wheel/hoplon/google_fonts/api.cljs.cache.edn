{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {is cljs.test, deftest cljs.test}, :excludes #{}, :name wheel.hoplon.google-fonts.api, :imports nil, :requires {wheel.hoplon.google-fonts.config wheel.hoplon.google-fonts.config, spec cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, cljs.test cljs.test}, :uses nil, :defs {fonts->uri-str {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 33, :column 7, :end-line 33, :end-column 21, :arglists (quote ([fonts])), :doc "Given a sequence of fonts, returns a string suitable in a Google Fonts URI"}, :name wheel.hoplon.google-fonts.api/fonts->uri-str, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 21, :method-params ([fonts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fonts])), :doc "Given a sequence of fonts, returns a string suitable in a Google Fonts URI"}, font->css-map {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 63, :column 7, :end-line 63, :end-column 20, :arglists (quote ([font])), :doc "Given a font map, returns a Hoplon CSS map, including the fallback"}, :name wheel.hoplon.google-fonts.api/font->css-map, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 20, :method-params ([font]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([font])), :doc "Given a font map, returns a Hoplon CSS map, including the fallback"}, ??font->family-str {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 121, :column 10, :end-line 121, :end-column 28}, :name wheel.hoplon.google-fonts.api/??font->family-str, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 121, :end-line 121, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ??font->uri-str {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 88, :column 10, :end-line 88, :end-column 25}, :name wheel.hoplon.google-fonts.api/??font->uri-str, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 88, :end-line 88, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ??spec {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 81, :column 10, :end-line 81, :end-column 16}, :name wheel.hoplon.google-fonts.api/??spec, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 81, :end-line 81, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, get-fallback {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([] [k])), :doc "Looks up a fallback string from the config", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [k]), :arglists ([] [k]), :arglists-meta (nil nil)}}, :name wheel.hoplon.google-fonts.api/get-fallback, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [k]), :arglists ([] [k]), :arglists-meta (nil nil)}, :method-params ([] [k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists ([] [k]), :doc "Looks up a fallback string from the config"}, fonts->url {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 39, :column 7, :end-line 39, :end-column 17, :arglists (quote ([fonts])), :doc "Given a sequence of fonts, returns the entire Google Fonts URL"}, :name wheel.hoplon.google-fonts.api/fonts->url, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 17, :method-params ([fonts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fonts])), :doc "Given a sequence of fonts, returns the entire Google Fonts URL"}, ??get-fallback {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 113, :column 10, :end-line 113, :end-column 24}, :name wheel.hoplon.google-fonts.api/??get-fallback, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 113, :end-line 113, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, font->css-str {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 57, :column 7, :end-line 57, :end-column 20, :arglists (quote ([font])), :doc "Given a font map, returns a CSS string, including the fallback"}, :name wheel.hoplon.google-fonts.api/font->css-str, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 20, :method-params ([font]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([font])), :doc "Given a font map, returns a CSS string, including the fallback"}, ??fonts->uri-str {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 93, :column 10, :end-line 93, :end-column 26}, :name wheel.hoplon.google-fonts.api/??fonts->uri-str, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, font->uri-str {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 22, :column 7, :end-line 22, :end-column 20, :arglists (quote ([font])), :doc "Given a font hash map, returns a string suitable in a Google Fonts URI"}, :name wheel.hoplon.google-fonts.api/font->uri-str, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 20, :method-params ([font]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([font])), :doc "Given a font hash map, returns a string suitable in a Google Fonts URI"}, ??fonts->url {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 102, :column 10, :end-line 102, :end-column 22}, :name wheel.hoplon.google-fonts.api/??fonts->url, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 102, :end-line 102, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, examples {:name wheel.hoplon.google-fonts.api/examples, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 71, :column 1, :end-line 71, :end-column 14, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 71, :column 6, :end-line 71, :end-column 14}, :tag any}, font->family-str {:protocol-inline nil, :meta {:file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :line 49, :column 7, :end-line 49, :end-column 23, :arglists (quote ([font])), :doc "Given a font map, returns a CSS font family string, including the fallback"}, :name wheel.hoplon.google-fonts.api/font->family-str, :variadic false, :file "/Users/davidmeister/.boot/cache/tmp/Users/davidmeister/dim-valley/nxb/-vrjyef/index.html.out/wheel/hoplon/google_fonts/api.cljs", :end-column 23, :method-params ([font]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([font])), :doc "Given a font map, returns a CSS font family string, including the fallback"}}, :require-macros {spec cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{fonts->uri-str font->css-map wheel.hoplon.google-fonts.api/??fonts->uri-str :req-un :opt-un wheel.hoplon.google-fonts.api/??get-fallback cljs.core/sequential? :gfn ??font->family-str dissoc :wheel.font/variants :pred-exprs :keys-pred = ??font->uri-str i ??spec :opt-keys wheel.hoplon.google-fonts.api/??fonts->url get-fallback :ns :name wheel.hoplon.google-fonts.api/??font->family-str cljs.core/string? spec/valid? :req-specs i' :file get :end-column o wheel.hoplon.google-fonts.config/well-known-fallbacks :type fonts->url :wheel.font/font cljs.core/contains? cljs.core/map? ??get-fallback % :column :wheel.font/name n cljs.spec.alpha/keys wheel.hoplon.google-fonts.api/??spec :req :fail :line not wheel.hoplon.google-fonts.api font->css-str :expected :req-keys ??fonts->uri-str font->uri-str cljs.core/fn :opt-specs merge :end-line :wheel.font/fallback :pred-forms o' :error wheel.hoplon.google-fonts.config/default-fallback :pass ??fonts->url str :arglists :actual :doc wheel.hoplon.google-fonts.config/base-url font->family-str :test wheel.hoplon.google-fonts.api/??font->uri-str :font-family :message :opt f}, :order [:wheel.font/name cljs.core/string? :wheel.font/variants cljs.core/sequential? :wheel.font/fallback :wheel.font/font cljs.spec.alpha/keys :req :opt :req-un :opt-un :gfn :pred-exprs :keys-pred :opt-keys :req-specs :req-keys :opt-specs :pred-forms cljs.core/fn % cljs.core/map? cljs.core/contains? :font-family :type :expected :actual :message :error spec/valid? i :pass :fail not merge dissoc wheel.hoplon.google-fonts.api/??spec :ns :name :file :end-column :column :line :end-line :arglists :doc :test wheel.hoplon.google-fonts.api ??spec = o font->uri-str wheel.hoplon.google-fonts.api/??font->uri-str ??font->uri-str fonts->uri-str str o' i' wheel.hoplon.google-fonts.api/??fonts->uri-str ??fonts->uri-str wheel.hoplon.google-fonts.config/base-url fonts->url wheel.hoplon.google-fonts.api/??fonts->url ??fonts->url get wheel.hoplon.google-fonts.config/well-known-fallbacks wheel.hoplon.google-fonts.config/default-fallback get-fallback wheel.hoplon.google-fonts.api/??get-fallback ??get-fallback n font->family-str font->css-str font->css-map f wheel.hoplon.google-fonts.api/??font->family-str ??font->family-str]}, :doc nil}